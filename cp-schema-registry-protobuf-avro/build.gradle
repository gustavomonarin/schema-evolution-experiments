buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "http://packages.confluent.io/maven/"
        }
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.12'

        classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.21.0"

        classpath "com.github.imflog:kafka-schema-registry-gradle-plugin:0.9.0"
    }
}

plugins {
    id 'java'
    id 'idea'
    id "com.google.protobuf" version "0.8.12"
    id "com.commercehub.gradle.plugin.avro" version "0.21.0"

    id "com.github.imflog.kafka-schema-registry-gradle-plugin" version "0.9.0"
}

group 'com.github.gustavomonarin'
version '1.0-SNAPSHOT'

java {
    sourceCompatibility(JavaVersion.VERSION_14)
    targetCompatibility(JavaVersion.VERSION_14)
}

tasks.withType(JavaCompile) {
    options.incremental = true
    options.compilerArgs.add("--enable-preview") // records and switch features in preview ;)
}

repositories {
    mavenCentral()

    jcenter()

    //confluent jars are found on mavencentral but pom descriptors are missing causing gradle to fail
    maven { url 'https://packages.confluent.io/maven/' }
}

dependencies {

    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '2.5.0'

    compile group: 'io.confluent', name: 'kafka-protobuf-serializer', version: '5.5.0'
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.12.2'

    compile group: 'org.apache.avro', name: 'avro', version: '1.10.0'
    compile group: 'io.confluent', name: 'kafka-avro-serializer', version: '5.5.0'

    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'


    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
}

schemaRegistry {
    url = 'http://localhost:8081'

    compatibility {
        subject('origins-avro-value', 'src/main/avro/envelop.avsc')
//
//        subject('origins-one-of-value', 'src/main/proto/envelop_using_oneof.proto', ['src/main/proto/urn.proto'])
//        subject('origins-any-value', 'src/main/proto/envelop_using_any.proto', ['src/main/proto/urn.proto'])
    }

}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.12.3'
    }
}

idea {
    module {
        // proto files and generated Java files are automatically added as source dirs.
        // If you have additional sources, add them here:
        sourceDirs += file("/generated/source/proto")
    }
}

test {
    useJUnitPlatform()
    jvmArgs("--enable-preview")
    testLogging {
        events "passed", "skipped", "failed"
    }
}